/*
Script: Controller.jx
	Base class for all Controllers.

License:
	MIT-style license.
*/


include('./Template.jx');

(function(){

this.Controller = new Class({

	Implements: Assets,

	baseLayout: '',
	templates: null,

	headers: new Table(),
	output: [],

	initialize: function(){
		this.baseLayout = Raccoon.Config.get('layoutBase');
		this.templates = new Template({
			path: Raccoon.Config.get('layoutPath'),
			suffix: Raccoon.Config.get('layoutSuffix'),
			pattern: Raccoon.Config.get('layoutTags')
		});
		this.loadAssets();
	},

	setHeader: function(key, value){
		this.headers.set(key, value);
	},

	setHeaders: function(pairs){
		this.headers.sets(pairs);
	},

	render: function(file, noLayout){
		if (noLayout) {
			return this.renderPartial(file);
		} else {
			this.content = this.renderPartial(file);
			return this.renderPartial(this.baseLayout);
		}
	},

	renderPartial: function(path){
		return this.templates.process(path, this);
	},

	renderStatic: function(path){
		var file = new File(Raccoon.Config.get('layouts') + path);
		file.open('r');
		var output = file.read();
		file.close();
		return output;
	},

	redirect: function(url){
		response.headers({'Location': url});
	},

	puts: function(str){
		this.output.push(str);
	},

	spurt: function(){
		this.output.join("").echo();
	},

});

})();